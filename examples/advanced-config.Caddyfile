# Advanced GFWReport Plugin Configuration
# This example shows comprehensive configuration with all available options

{
	# Global options
	debug
	log {
		level DEBUG
	}
	
	# Order the gfwreport plugin in the middleware chain
	order gfwreport before reverse_proxy
}

# Production site with comprehensive threat detection
example.com {
	# Enable structured logging
	log {
		output file /var/log/caddy/access.log {
			roll_size 10mb
			roll_keep 10
			roll_keep_for 24h
		}
		format json {
			time_format "iso8601"
		}
	}
	
	# Enable compression
	encode zstd gzip
	
	# GFWReport plugin with full configuration
	gfwreport {
		# Path to malicious patterns file
		file /etc/caddy/patterns/threats.txt
		
		# Hook configuration for threat reporting
		hook {
			# HTTP webhook for remote SIEM integration
			remote https://siem.company.com/api/v1/threats
			
			# Shell command for local processing
			exec /usr/local/bin/process-threat.sh
		}
	}
	
	# Rate limiting to prevent abuse
	rate_limit {
		zone static_files {
			key {remote_host}
			events 100
			window 1m
		}
	}
	
	# Serve application
	reverse_proxy localhost:3000
}

# Development/testing site with basic configuration
dev.example.com {
	# Simple logging for development
	log {
		output stdout
		format console
	}
	
	# GFWReport with HTTP webhook only
	gfwreport {
		file docker/report.txt
		hook {
			remote http://localhost:9090/webhook
		}
	}
	
	# Serve static files for development
	file_server {
		root /var/www/dev
	}
}

# Monitoring endpoint
monitor.example.com {
	# GFWReport for monitoring traffic patterns
	gfwreport {
		file /etc/caddy/patterns/monitoring.txt
		hook {
			exec /usr/local/bin/log-metrics.sh
		}
	}
	
	# Metrics endpoint
	metrics /metrics
	
	# Health check
	respond /health "OK" 200
}
